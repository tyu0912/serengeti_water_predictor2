{"format": "torch", "nodes": [{"name": "conv_stem", "id": 140670314295984, "class_name": "Conv2d(4, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)", "parameters": [["weight", [32, 4, 3, 3]]], "output_shape": [[4, 32, 112, 112]], "num_parameters": [1152]}, {"name": "bn1", "id": 140670900493616, "class_name": "BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [32]], ["bias", [32]]], "output_shape": [[4, 32, 112, 112]], "num_parameters": [32, 32]}, {"name": "act1", "id": 140670900491432, "class_name": "ReLU(inplace=True)", "parameters": [], "output_shape": [[4, 32, 112, 112]], "num_parameters": []}, {"name": "blocks.0.0", "id": 140670900490536, "class_name": "DepthwiseSeparableConv(\n  (conv_dw): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)\n  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): ReLU(inplace=True)\n  (conv_pw): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Identity()\n)", "parameters": [["conv_dw.weight", [32, 1, 3, 3]], ["bn1.weight", [32]], ["bn1.bias", [32]], ["conv_pw.weight", [32, 32, 1, 1]], ["bn2.weight", [32]], ["bn2.bias", [32]]], "output_shape": [[4, 32, 112, 112]], "num_parameters": [288, 32, 32, 1024, 32, 32]}, {"name": "blocks.1.0", "id": 140670849645144, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): ReLU(inplace=True)\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)\n    (1): Conv2d(64, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=64, bias=False)\n    (2): Conv2d(64, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=64, bias=False)\n  )\n  (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): ReLU(inplace=True)\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(96, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(96, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [96, 16, 1, 1]], ["conv_pw.1.weight", [96, 16, 1, 1]], ["bn1.weight", [192]], ["bn1.bias", [192]], ["conv_dw.0.weight", [64, 1, 3, 3]], ["conv_dw.1.weight", [64, 1, 5, 5]], ["conv_dw.2.weight", [64, 1, 7, 7]], ["bn2.weight", [192]], ["bn2.bias", [192]], ["conv_pwl.0.weight", [20, 96, 1, 1]], ["conv_pwl.1.weight", [20, 96, 1, 1]], ["bn3.weight", [40]], ["bn3.bias", [40]]], "output_shape": [[4, 40, 56, 56]], "num_parameters": [1536, 1536, 192, 192, 576, 1600, 3136, 192, 192, 1920, 1920, 40, 40]}, {"name": "blocks.1.1", "id": 140670314297328, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(20, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(20, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): ReLU(inplace=True)\n  (conv_dw): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n  (bn2): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): ReLU(inplace=True)\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(60, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(60, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [60, 20, 1, 1]], ["conv_pw.1.weight", [60, 20, 1, 1]], ["bn1.weight", [120]], ["bn1.bias", [120]], ["conv_dw.weight", [120, 1, 3, 3]], ["bn2.weight", [120]], ["bn2.bias", [120]], ["conv_pwl.0.weight", [20, 60, 1, 1]], ["conv_pwl.1.weight", [20, 60, 1, 1]], ["bn3.weight", [40]], ["bn3.bias", [40]]], "output_shape": [[4, 40, 56, 56]], "num_parameters": [1200, 1200, 120, 120, 1080, 120, 120, 1200, 1200, 40, 40]}, {"name": "blocks.2.0", "id": 140670849645984, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(60, 60, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=60, bias=False)\n    (1): Conv2d(60, 60, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=60, bias=False)\n    (2): Conv2d(60, 60, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=60, bias=False)\n    (3): Conv2d(60, 60, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=60, bias=False)\n  )\n  (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(240, 56, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [240, 40, 1, 1]], ["bn1.weight", [240]], ["bn1.bias", [240]], ["conv_dw.0.weight", [60, 1, 3, 3]], ["conv_dw.1.weight", [60, 1, 5, 5]], ["conv_dw.2.weight", [60, 1, 7, 7]], ["conv_dw.3.weight", [60, 1, 9, 9]], ["bn2.weight", [240]], ["bn2.bias", [240]], ["se.conv_reduce.weight", [20, 240, 1, 1]], ["se.conv_reduce.bias", [20]], ["se.conv_expand.weight", [240, 20, 1, 1]], ["se.conv_expand.bias", [240]], ["conv_pwl.weight", [56, 240, 1, 1]], ["bn3.weight", [56]], ["bn3.bias", [56]]], "output_shape": [[4, 56, 28, 28]], "num_parameters": [9600, 240, 240, 540, 1500, 2940, 4860, 240, 240, 4800, 20, 4800, 240, 13440, 56, 56]}, {"name": "blocks.2.1", "id": 140671071839904, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(28, 168, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(28, 168, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(168, 168, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=168, bias=False)\n    (1): Conv2d(168, 168, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)\n  )\n  (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(336, 28, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(28, 336, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(168, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(168, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [168, 28, 1, 1]], ["conv_pw.1.weight", [168, 28, 1, 1]], ["bn1.weight", [336]], ["bn1.bias", [336]], ["conv_dw.0.weight", [168, 1, 3, 3]], ["conv_dw.1.weight", [168, 1, 5, 5]], ["bn2.weight", [336]], ["bn2.bias", [336]], ["se.conv_reduce.weight", [28, 336, 1, 1]], ["se.conv_reduce.bias", [28]], ["se.conv_expand.weight", [336, 28, 1, 1]], ["se.conv_expand.bias", [336]], ["conv_pwl.0.weight", [28, 168, 1, 1]], ["conv_pwl.1.weight", [28, 168, 1, 1]], ["bn3.weight", [56]], ["bn3.bias", [56]]], "output_shape": [[4, 56, 28, 28]], "num_parameters": [4704, 4704, 336, 336, 1512, 4200, 336, 336, 9408, 28, 9408, 336, 4704, 4704, 56, 56]}, {"name": "blocks.2.2", "id": 140670093315096, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(28, 168, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(28, 168, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(168, 168, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=168, bias=False)\n    (1): Conv2d(168, 168, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)\n  )\n  (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(336, 28, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(28, 336, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(168, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(168, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [168, 28, 1, 1]], ["conv_pw.1.weight", [168, 28, 1, 1]], ["bn1.weight", [336]], ["bn1.bias", [336]], ["conv_dw.0.weight", [168, 1, 3, 3]], ["conv_dw.1.weight", [168, 1, 5, 5]], ["bn2.weight", [336]], ["bn2.bias", [336]], ["se.conv_reduce.weight", [28, 336, 1, 1]], ["se.conv_reduce.bias", [28]], ["se.conv_expand.weight", [336, 28, 1, 1]], ["se.conv_expand.bias", [336]], ["conv_pwl.0.weight", [28, 168, 1, 1]], ["conv_pwl.1.weight", [28, 168, 1, 1]], ["bn3.weight", [56]], ["bn3.bias", [56]]], "output_shape": [[4, 56, 28, 28]], "num_parameters": [4704, 4704, 336, 336, 1512, 4200, 336, 336, 9408, 28, 9408, 336, 4704, 4704, 56, 56]}, {"name": "blocks.2.3", "id": 140670093314032, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(28, 168, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(28, 168, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(168, 168, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=168, bias=False)\n    (1): Conv2d(168, 168, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=168, bias=False)\n  )\n  (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(336, 28, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(28, 336, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(168, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(168, 28, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [168, 28, 1, 1]], ["conv_pw.1.weight", [168, 28, 1, 1]], ["bn1.weight", [336]], ["bn1.bias", [336]], ["conv_dw.0.weight", [168, 1, 3, 3]], ["conv_dw.1.weight", [168, 1, 5, 5]], ["bn2.weight", [336]], ["bn2.bias", [336]], ["se.conv_reduce.weight", [28, 336, 1, 1]], ["se.conv_reduce.bias", [28]], ["se.conv_expand.weight", [336, 28, 1, 1]], ["se.conv_expand.bias", [336]], ["conv_pwl.0.weight", [28, 168, 1, 1]], ["conv_pwl.1.weight", [28, 168, 1, 1]], ["bn3.weight", [56]], ["bn3.bias", [56]]], "output_shape": [[4, 56, 28, 28]], "num_parameters": [4704, 4704, 336, 336, 1512, 4200, 336, 336, 9408, 28, 9408, 336, 4704, 4704, 56, 56]}, {"name": "blocks.3.0", "id": 140670851213968, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(56, 336, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(112, 112, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=112, bias=False)\n    (1): Conv2d(112, 112, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=112, bias=False)\n    (2): Conv2d(112, 112, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=112, bias=False)\n  )\n  (bn2): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(336, 14, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(14, 336, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(336, 104, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [336, 56, 1, 1]], ["bn1.weight", [336]], ["bn1.bias", [336]], ["conv_dw.0.weight", [112, 1, 3, 3]], ["conv_dw.1.weight", [112, 1, 5, 5]], ["conv_dw.2.weight", [112, 1, 7, 7]], ["bn2.weight", [336]], ["bn2.bias", [336]], ["se.conv_reduce.weight", [14, 336, 1, 1]], ["se.conv_reduce.bias", [14]], ["se.conv_expand.weight", [336, 14, 1, 1]], ["se.conv_expand.bias", [336]], ["conv_pwl.weight", [104, 336, 1, 1]], ["bn3.weight", [104]], ["bn3.bias", [104]]], "output_shape": [[4, 104, 14, 14]], "num_parameters": [18816, 336, 336, 1008, 2800, 5488, 336, 336, 4704, 14, 4704, 336, 34944, 104, 104]}, {"name": "blocks.3.1", "id": 140670314297944, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(52, 312, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(52, 312, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(624, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(156, 156, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=156, bias=False)\n    (1): Conv2d(156, 156, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=156, bias=False)\n    (2): Conv2d(156, 156, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=156, bias=False)\n    (3): Conv2d(156, 156, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=156, bias=False)\n  )\n  (bn2): BatchNorm2d(624, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(624, 26, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(26, 624, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(312, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(312, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [312, 52, 1, 1]], ["conv_pw.1.weight", [312, 52, 1, 1]], ["bn1.weight", [624]], ["bn1.bias", [624]], ["conv_dw.0.weight", [156, 1, 3, 3]], ["conv_dw.1.weight", [156, 1, 5, 5]], ["conv_dw.2.weight", [156, 1, 7, 7]], ["conv_dw.3.weight", [156, 1, 9, 9]], ["bn2.weight", [624]], ["bn2.bias", [624]], ["se.conv_reduce.weight", [26, 624, 1, 1]], ["se.conv_reduce.bias", [26]], ["se.conv_expand.weight", [624, 26, 1, 1]], ["se.conv_expand.bias", [624]], ["conv_pwl.0.weight", [52, 312, 1, 1]], ["conv_pwl.1.weight", [52, 312, 1, 1]], ["bn3.weight", [104]], ["bn3.bias", [104]]], "output_shape": [[4, 104, 14, 14]], "num_parameters": [16224, 16224, 624, 624, 1404, 3900, 7644, 12636, 624, 624, 16224, 26, 16224, 624, 16224, 16224, 104, 104]}, {"name": "blocks.3.2", "id": 140670898821048, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(52, 312, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(52, 312, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(624, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(156, 156, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=156, bias=False)\n    (1): Conv2d(156, 156, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=156, bias=False)\n    (2): Conv2d(156, 156, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=156, bias=False)\n    (3): Conv2d(156, 156, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=156, bias=False)\n  )\n  (bn2): BatchNorm2d(624, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(624, 26, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(26, 624, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(312, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(312, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [312, 52, 1, 1]], ["conv_pw.1.weight", [312, 52, 1, 1]], ["bn1.weight", [624]], ["bn1.bias", [624]], ["conv_dw.0.weight", [156, 1, 3, 3]], ["conv_dw.1.weight", [156, 1, 5, 5]], ["conv_dw.2.weight", [156, 1, 7, 7]], ["conv_dw.3.weight", [156, 1, 9, 9]], ["bn2.weight", [624]], ["bn2.bias", [624]], ["se.conv_reduce.weight", [26, 624, 1, 1]], ["se.conv_reduce.bias", [26]], ["se.conv_expand.weight", [624, 26, 1, 1]], ["se.conv_expand.bias", [624]], ["conv_pwl.0.weight", [52, 312, 1, 1]], ["conv_pwl.1.weight", [52, 312, 1, 1]], ["bn3.weight", [104]], ["bn3.bias", [104]]], "output_shape": [[4, 104, 14, 14]], "num_parameters": [16224, 16224, 624, 624, 1404, 3900, 7644, 12636, 624, 624, 16224, 26, 16224, 624, 16224, 16224, 104, 104]}, {"name": "blocks.3.3", "id": 140670898822728, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(52, 312, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(52, 312, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(624, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(156, 156, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=156, bias=False)\n    (1): Conv2d(156, 156, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=156, bias=False)\n    (2): Conv2d(156, 156, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=156, bias=False)\n    (3): Conv2d(156, 156, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=156, bias=False)\n  )\n  (bn2): BatchNorm2d(624, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(624, 26, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(26, 624, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(312, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(312, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [312, 52, 1, 1]], ["conv_pw.1.weight", [312, 52, 1, 1]], ["bn1.weight", [624]], ["bn1.bias", [624]], ["conv_dw.0.weight", [156, 1, 3, 3]], ["conv_dw.1.weight", [156, 1, 5, 5]], ["conv_dw.2.weight", [156, 1, 7, 7]], ["conv_dw.3.weight", [156, 1, 9, 9]], ["bn2.weight", [624]], ["bn2.bias", [624]], ["se.conv_reduce.weight", [26, 624, 1, 1]], ["se.conv_reduce.bias", [26]], ["se.conv_expand.weight", [624, 26, 1, 1]], ["se.conv_expand.bias", [624]], ["conv_pwl.0.weight", [52, 312, 1, 1]], ["conv_pwl.1.weight", [52, 312, 1, 1]], ["bn3.weight", [104]], ["bn3.bias", [104]]], "output_shape": [[4, 104, 14, 14]], "num_parameters": [16224, 16224, 624, 624, 1404, 3900, 7644, 12636, 624, 624, 16224, 26, 16224, 624, 16224, 16224, 104, 104]}, {"name": "blocks.4.0", "id": 140670313678552, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(104, 624, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(624, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): Conv2d(624, 624, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=624, bias=False)\n  (bn2): BatchNorm2d(624, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(624, 52, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(52, 624, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(624, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [624, 104, 1, 1]], ["bn1.weight", [624]], ["bn1.bias", [624]], ["conv_dw.weight", [624, 1, 3, 3]], ["bn2.weight", [624]], ["bn2.bias", [624]], ["se.conv_reduce.weight", [52, 624, 1, 1]], ["se.conv_reduce.bias", [52]], ["se.conv_expand.weight", [624, 52, 1, 1]], ["se.conv_expand.bias", [624]], ["conv_pwl.weight", [160, 624, 1, 1]], ["bn3.weight", [160]], ["bn3.bias", [160]]], "output_shape": [[4, 160, 14, 14]], "num_parameters": [64896, 624, 624, 5616, 624, 624, 32448, 52, 32448, 624, 99840, 160, 160]}, {"name": "blocks.4.1", "id": 140670314296096, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(80, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(80, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n    (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n    (2): Conv2d(120, 120, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=120, bias=False)\n    (3): Conv2d(120, 120, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=120, bias=False)\n  )\n  (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [240, 80, 1, 1]], ["conv_pw.1.weight", [240, 80, 1, 1]], ["bn1.weight", [480]], ["bn1.bias", [480]], ["conv_dw.0.weight", [120, 1, 3, 3]], ["conv_dw.1.weight", [120, 1, 5, 5]], ["conv_dw.2.weight", [120, 1, 7, 7]], ["conv_dw.3.weight", [120, 1, 9, 9]], ["bn2.weight", [480]], ["bn2.bias", [480]], ["se.conv_reduce.weight", [80, 480, 1, 1]], ["se.conv_reduce.bias", [80]], ["se.conv_expand.weight", [480, 80, 1, 1]], ["se.conv_expand.bias", [480]], ["conv_pwl.0.weight", [80, 240, 1, 1]], ["conv_pwl.1.weight", [80, 240, 1, 1]], ["bn3.weight", [160]], ["bn3.bias", [160]]], "output_shape": [[4, 160, 14, 14]], "num_parameters": [19200, 19200, 480, 480, 1080, 3000, 5880, 9720, 480, 480, 38400, 80, 38400, 480, 19200, 19200, 160, 160]}, {"name": "blocks.4.2", "id": 140670313680736, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(80, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(80, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n    (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n    (2): Conv2d(120, 120, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=120, bias=False)\n    (3): Conv2d(120, 120, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=120, bias=False)\n  )\n  (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [240, 80, 1, 1]], ["conv_pw.1.weight", [240, 80, 1, 1]], ["bn1.weight", [480]], ["bn1.bias", [480]], ["conv_dw.0.weight", [120, 1, 3, 3]], ["conv_dw.1.weight", [120, 1, 5, 5]], ["conv_dw.2.weight", [120, 1, 7, 7]], ["conv_dw.3.weight", [120, 1, 9, 9]], ["bn2.weight", [480]], ["bn2.bias", [480]], ["se.conv_reduce.weight", [80, 480, 1, 1]], ["se.conv_reduce.bias", [80]], ["se.conv_expand.weight", [480, 80, 1, 1]], ["se.conv_expand.bias", [480]], ["conv_pwl.0.weight", [80, 240, 1, 1]], ["conv_pwl.1.weight", [80, 240, 1, 1]], ["bn3.weight", [160]], ["bn3.bias", [160]]], "output_shape": [[4, 160, 14, 14]], "num_parameters": [19200, 19200, 480, 480, 1080, 3000, 5880, 9720, 480, 480, 38400, 80, 38400, 480, 19200, 19200, 160, 160]}, {"name": "blocks.4.3", "id": 140670313268784, "class_name": "InvertedResidual(\n  (conv_pw): MixedConv2d(\n    (0): Conv2d(80, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(80, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n    (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n    (2): Conv2d(120, 120, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=120, bias=False)\n    (3): Conv2d(120, 120, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=120, bias=False)\n  )\n  (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.0.weight", [240, 80, 1, 1]], ["conv_pw.1.weight", [240, 80, 1, 1]], ["bn1.weight", [480]], ["bn1.bias", [480]], ["conv_dw.0.weight", [120, 1, 3, 3]], ["conv_dw.1.weight", [120, 1, 5, 5]], ["conv_dw.2.weight", [120, 1, 7, 7]], ["conv_dw.3.weight", [120, 1, 9, 9]], ["bn2.weight", [480]], ["bn2.bias", [480]], ["se.conv_reduce.weight", [80, 480, 1, 1]], ["se.conv_reduce.bias", [80]], ["se.conv_expand.weight", [480, 80, 1, 1]], ["se.conv_expand.bias", [480]], ["conv_pwl.0.weight", [80, 240, 1, 1]], ["conv_pwl.1.weight", [80, 240, 1, 1]], ["bn3.weight", [160]], ["bn3.bias", [160]]], "output_shape": [[4, 160, 14, 14]], "num_parameters": [19200, 19200, 480, 480, 1080, 3000, 5880, 9720, 480, 480, 38400, 80, 38400, 480, 19200, 19200, 160, 160]}, {"name": "blocks.5.0", "id": 140670313270912, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=240, bias=False)\n    (1): Conv2d(240, 240, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=240, bias=False)\n    (2): Conv2d(240, 240, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=240, bias=False)\n    (3): Conv2d(240, 240, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=240, bias=False)\n  )\n  (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(960, 80, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(80, 960, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): Conv2d(960, 264, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn3): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [960, 160, 1, 1]], ["bn1.weight", [960]], ["bn1.bias", [960]], ["conv_dw.0.weight", [240, 1, 3, 3]], ["conv_dw.1.weight", [240, 1, 5, 5]], ["conv_dw.2.weight", [240, 1, 7, 7]], ["conv_dw.3.weight", [240, 1, 9, 9]], ["bn2.weight", [960]], ["bn2.bias", [960]], ["se.conv_reduce.weight", [80, 960, 1, 1]], ["se.conv_reduce.bias", [80]], ["se.conv_expand.weight", [960, 80, 1, 1]], ["se.conv_expand.bias", [960]], ["conv_pwl.weight", [264, 960, 1, 1]], ["bn3.weight", [264]], ["bn3.bias", [264]]], "output_shape": [[4, 264, 7, 7]], "num_parameters": [153600, 960, 960, 2160, 6000, 11760, 19440, 960, 960, 76800, 80, 76800, 960, 253440, 264, 264]}, {"name": "blocks.5.1", "id": 140670314298056, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(264, 1584, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1584, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(396, 396, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=396, bias=False)\n    (1): Conv2d(396, 396, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=396, bias=False)\n    (2): Conv2d(396, 396, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=396, bias=False)\n    (3): Conv2d(396, 396, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=396, bias=False)\n  )\n  (bn2): BatchNorm2d(1584, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(1584, 132, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(132, 1584, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(792, 132, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(792, 132, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1584, 264, 1, 1]], ["bn1.weight", [1584]], ["bn1.bias", [1584]], ["conv_dw.0.weight", [396, 1, 3, 3]], ["conv_dw.1.weight", [396, 1, 5, 5]], ["conv_dw.2.weight", [396, 1, 7, 7]], ["conv_dw.3.weight", [396, 1, 9, 9]], ["bn2.weight", [1584]], ["bn2.bias", [1584]], ["se.conv_reduce.weight", [132, 1584, 1, 1]], ["se.conv_reduce.bias", [132]], ["se.conv_expand.weight", [1584, 132, 1, 1]], ["se.conv_expand.bias", [1584]], ["conv_pwl.0.weight", [132, 792, 1, 1]], ["conv_pwl.1.weight", [132, 792, 1, 1]], ["bn3.weight", [264]], ["bn3.bias", [264]]], "output_shape": [[4, 264, 7, 7]], "num_parameters": [418176, 1584, 1584, 3564, 9900, 19404, 32076, 1584, 1584, 209088, 132, 209088, 1584, 104544, 104544, 264, 264]}, {"name": "blocks.5.2", "id": 140670093056040, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(264, 1584, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1584, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(396, 396, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=396, bias=False)\n    (1): Conv2d(396, 396, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=396, bias=False)\n    (2): Conv2d(396, 396, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=396, bias=False)\n    (3): Conv2d(396, 396, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=396, bias=False)\n  )\n  (bn2): BatchNorm2d(1584, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(1584, 132, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(132, 1584, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(792, 132, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(792, 132, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1584, 264, 1, 1]], ["bn1.weight", [1584]], ["bn1.bias", [1584]], ["conv_dw.0.weight", [396, 1, 3, 3]], ["conv_dw.1.weight", [396, 1, 5, 5]], ["conv_dw.2.weight", [396, 1, 7, 7]], ["conv_dw.3.weight", [396, 1, 9, 9]], ["bn2.weight", [1584]], ["bn2.bias", [1584]], ["se.conv_reduce.weight", [132, 1584, 1, 1]], ["se.conv_reduce.bias", [132]], ["se.conv_expand.weight", [1584, 132, 1, 1]], ["se.conv_expand.bias", [1584]], ["conv_pwl.0.weight", [132, 792, 1, 1]], ["conv_pwl.1.weight", [132, 792, 1, 1]], ["bn3.weight", [264]], ["bn3.bias", [264]]], "output_shape": [[4, 264, 7, 7]], "num_parameters": [418176, 1584, 1584, 3564, 9900, 19404, 32076, 1584, 1584, 209088, 132, 209088, 1584, 104544, 104544, 264, 264]}, {"name": "blocks.5.3", "id": 140670093057496, "class_name": "InvertedResidual(\n  (conv_pw): Conv2d(264, 1584, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  (bn1): BatchNorm2d(1584, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act1): Swish()\n  (conv_dw): MixedConv2d(\n    (0): Conv2d(396, 396, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=396, bias=False)\n    (1): Conv2d(396, 396, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=396, bias=False)\n    (2): Conv2d(396, 396, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=396, bias=False)\n    (3): Conv2d(396, 396, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=396, bias=False)\n  )\n  (bn2): BatchNorm2d(1584, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (act2): Swish()\n  (se): SqueezeExcite(\n    (avg_pool): AdaptiveAvgPool2d(output_size=1)\n    (conv_reduce): Conv2d(1584, 132, kernel_size=(1, 1), stride=(1, 1))\n    (act1): Swish()\n    (conv_expand): Conv2d(132, 1584, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (conv_pwl): MixedConv2d(\n    (0): Conv2d(792, 132, kernel_size=(1, 1), stride=(1, 1), bias=False)\n    (1): Conv2d(792, 132, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  )\n  (bn3): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n)", "parameters": [["conv_pw.weight", [1584, 264, 1, 1]], ["bn1.weight", [1584]], ["bn1.bias", [1584]], ["conv_dw.0.weight", [396, 1, 3, 3]], ["conv_dw.1.weight", [396, 1, 5, 5]], ["conv_dw.2.weight", [396, 1, 7, 7]], ["conv_dw.3.weight", [396, 1, 9, 9]], ["bn2.weight", [1584]], ["bn2.bias", [1584]], ["se.conv_reduce.weight", [132, 1584, 1, 1]], ["se.conv_reduce.bias", [132]], ["se.conv_expand.weight", [1584, 132, 1, 1]], ["se.conv_expand.bias", [1584]], ["conv_pwl.0.weight", [132, 792, 1, 1]], ["conv_pwl.1.weight", [132, 792, 1, 1]], ["bn3.weight", [264]], ["bn3.bias", [264]]], "output_shape": [[4, 264, 7, 7]], "num_parameters": [418176, 1584, 1584, 3564, 9900, 19404, 32076, 1584, 1584, 209088, 132, 209088, 1584, 104544, 104544, 264, 264]}, {"name": "conv_head", "id": 140670314297552, "class_name": "Conv2d(264, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)", "parameters": [["weight", [1536, 264, 1, 1]]], "output_shape": [[4, 1536, 7, 7]], "num_parameters": [405504]}, {"name": "bn2", "id": 140670093465304, "class_name": "BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)", "parameters": [["weight", [1536]], ["bias", [1536]]], "output_shape": [[4, 1536, 7, 7]], "num_parameters": [1536, 1536]}, {"name": "act2", "id": 140670093465360, "class_name": "ReLU(inplace=True)", "parameters": [], "output_shape": [[4, 1536, 7, 7]], "num_parameters": []}, {"name": "global_pool", "id": 140670093465416, "class_name": "SelectAdaptivePool2d (output_size=1, pool_type=avg)", "parameters": [], "output_shape": [[4, 1536, 1, 1]], "num_parameters": []}, {"name": "classifier", "id": 140670849717136, "class_name": "Linear(in_features=1536, out_features=2, bias=True)", "parameters": [["weight", [2, 1536]], ["bias", [2]]], "output_shape": [[4, 2]], "num_parameters": [3072, 2]}], "edges": []}